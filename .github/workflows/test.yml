name: Summon Akochan

on:
  - push

env:
  CLANGPP: /usr/local/opt/llvm/bin/clang++
  HOMEBREW_NO_AUTO_UPDATE: '1'

jobs:
  run:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Update Homebrew
        run: |
          brew update --preinstall
          cat "$(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/"{gnu-sed,coreutils,boost}.rb > .github/brew-formulae
      - name: Configure Homebrew cache
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/Homebrew/gnu-sed--*
            ~/Library/Caches/Homebrew/coreutils--*
            ~/Library/Caches/Homebrew/boost--*
            ~/Library/Caches/Homebrew/downloads/*--gnu-sed-*
            ~/Library/Caches/Homebrew/downloads/*--coreutils-*
            ~/Library/Caches/Homebrew/downloads/*--boost-*
          key: brew-${{ hashFiles('.github/brew-formulae') }}
          restore-keys: brew-

      - name: Environment preparation
        run: |
          set -x

          git clone --depth=1 https://github.com/critter-mj/akochan.git
          git --git-dir=akochan/.git rev-parse --short HEAD | tee AKOCHAN_VER
          git clone --depth=1 https://github.com/Equim-chan/akochan-reviewer.git
          git --git-dir=akochan-reviewer/.git rev-parse --short HEAD

          brew install gnu-sed coreutils boost

          rustup toolchain update --no-self-update stable
          rustup default stable
          rustup show

          node --version
          yarn --version
          yarn global add html-minifier

          sysctl -a | grep machdep.cpu
          vm_stat

          rustc --version | tee RUSTC_VER
          $CLANGPP -E - -march=native -###
          gnproc | tee NPROC

      - name: Cache akochan
        id: cache-akochan
        uses: actions/cache@v2
        with:
          path: |
            akochan
            !akochan/**/*.cpp
            !akochan/**/*.hpp
            !akochan/**/*.c
            !akochan/**/*.h
            !akochan/**/Makefile*
          # change it manually when needed
          key: ${{ runner.os }}-akochan-2-${{ hashFiles('NPROC') }}-${{ hashFiles('AKOCHAN_VER') }}
      - name: Cache akochan-reviewer
        id: cache-akochan-reviewer
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            akochan-reviewer/target
          # change it manually when needed
          key: ${{ runner.os }}-cargo-4-${{ hashFiles('RUSTC_VER') }}-${{ hashFiles('akochan-reviewer/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-4-${{ hashFiles('RUSTC_VER') }}-
            ${{ runner.os }}-cargo-4-

      - name: Build akochan
        run: |
          patch -d akochan --strip=0 < a.patch
          gsed -i \
            -e 's/CFLAGS =/CFLAGS = -ffast-math/' \
            -e '/-mllvm/d' \
            akochan/Makefile_MacOS akochan/ai_src/Makefile_MacOS
          make -C akochan/ai_src -j$(gnproc) -f Makefile_MacOS
          make -C akochan -j$(gnproc) -f Makefile_MacOS
          otool -L akochan/{system.exe,libai.so}

      - name: Build akochan-reviewer
        env:
          RUSTFLAGS: -C target-cpu=native
        run: |
          cd akochan-reviewer
          cargo build --release

      - name: Run akochan-reviewer
        run: |
          source env.sh
          cd akochan-reviewer
          target/release/akochan-reviewer --no-review --mjai-out ../mjai.json --no-open "${ARGS[@]}"

      - name: Compress report
        run: |
          source env.sh
          "$(yarn global bin)"/html-minifier -o "$OUTPUT" \
            --collapse-whitespace \
            --collapse-boolean-attributes \
            --remove-optional-tags \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-attribute-quotes \
            --use-short-doctype \
            --minify-css true \
            --sort-attributes \
            --sort-class-name \
            report.html

      - name: Publish report
        run: |
          echo DONE
