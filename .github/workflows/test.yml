name: Summon Akochan

on:
  - push

env:
  HOMEBREW_NO_AUTO_UPDATE: '1'

jobs:
  run:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Update Homebrew
        run: |
          brew update --preinstall
          cat "$(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/"{gnu-sed,gnu-tar,coreutils,boost}.rb > .github/brew-formulae
      - name: Configure Homebrew cache
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/Homebrew/gnu-sed--*
            ~/Library/Caches/Homebrew/gnu-tar--*
            ~/Library/Caches/Homebrew/coreutils--*
            ~/Library/Caches/Homebrew/boost--*
            ~/Library/Caches/Homebrew/downloads/*--gnu-sed-*
            ~/Library/Caches/Homebrew/downloads/*--gnu-tar-*
            ~/Library/Caches/Homebrew/downloads/*--coreutils-*
            ~/Library/Caches/Homebrew/downloads/*--boost-*
          key: brew-${{ hashFiles('.github/brew-formulae') }}
          restore-keys: brew-

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          default: true
          toolchain: stable
          target: x86_64-apple-darwin

      - name: Environment preparation
        run: |
          set -x

          git clone --depth=1 https://github.com/critter-mj/akochan.git
          git --git-dir=akochan/.git rev-parse --short HEAD | tee AKOCHAN_VER
          git clone --depth=1 https://github.com/Equim-chan/akochan-reviewer.git
          git --git-dir=akochan-reviewer/.git rev-parse --short HEAD | tee REVIEWER_VER

          brew install gnu-sed gnu-tar coreutils boost

          node --version
          yarn --version
          yarn global add html-minifier

          sysctl -a | grep machdep.cpu
          vm_stat

          rustup toolchain update --no-self-update stable
          rustup default stable
          rustup show

          # macos tar is buggy and will cause problem for cache
          sudo rm /usr/bin/tar
          sudo ln -sf /usr/local/opt/gnu-tar/libexec/gnubin/tar /usr/bin/tar

          rustc --version | tee RUSTC_VER
          /usr/local/opt/llvm/bin/clang++ -E - -march=native -###
          gnproc | tee NPROC

      - name: Cache akochan
        id: cache-akochan
        uses: actions/cache@v2
        with:
          path: akochan
          # change it manually when needed
          key: ${{ runner.os }}-akochan-4-${{ hashFiles('NPROC', 'AKOCHAN_VER') }}
      - name: Cache akochan-reviewer
        id: cache-akochan-reviewer
        uses: actions/cache@v2
        with:
          path: |
            akochan-reviewer/target
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          # change it manually when needed
          key: ${{ runner.os }}-cargo-11-${{ hashFiles('RUSTC_VER') }}-${{ hashFiles('akochan-reviewer/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-11-${{ hashFiles('RUSTC_VER') }}-
            ${{ runner.os }}-cargo-11-

      - name: Build akochan
        if: steps.cache-akochan.outputs.cache-hit != 'true'
        run: |
          patch -d akochan --strip=0 < a.patch
          gsed -i \
            -e 's/CFLAGS =/CFLAGS = -ffast-math/' \
            -e '/-mllvm/d' \
            akochan/Makefile_MacOS akochan/ai_src/Makefile_MacOS
          make -C akochan/ai_src -j$(gnproc) -f Makefile_MacOS
          make -C akochan -j$(gnproc) -f Makefile_MacOS

      - name: Build akochan-reviewer
        env:
          RUSTFLAGS: -C target-cpu=native
        run: |
          cd akochan-reviewer
          cargo build --release

#       - name: Run akochan-reviewer
#         run: |
#           source env.sh
#           cd akochan-reviewer
#           target/release/akochan-reviewer -d ../akochan --no-open -o ../report.html "${ARGS[@]}"

#       - name: Compress report
#         run: |
#           source env.sh
#           "$(yarn global bin)"/html-minifier -o "$OUTPUT" \
#             --collapse-whitespace \
#             --collapse-boolean-attributes \
#             --remove-optional-tags \
#             --remove-redundant-attributes \
#             --remove-script-type-attributes \
#             --remove-attribute-quotes \
#             --use-short-doctype \
#             --minify-css true \
#             --sort-attributes \
#             --sort-class-name \
#             report.html

#       - name: Publish report
#         env:
#           ARDW_TOKEN: ${{ secrets.ARDW_TOKEN }}
#         run: |
#           source env.sh
#           curl -X POST -F "report=@$OUTPUT" -H "X-ARDW-Token: $ARDW_TOKEN" https://akochan.ekyu.moe/internal/submit-from-gh
